---
swagger: "2.0"
info:
  description: "This is Swagger UI environment generated for the TMF Dummy Management\
    \ specificationab"
  version: "2.0.0"
  title: "Dummy Management"
host: "dummymanagementtmforum.mybluemix.net"
basePath: "/docs"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /dummy:
    get:
      tags:
      - "dummy"
      summary: "List or find 'Dummies' objects a"
      operationId: "listDummy"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma separated properties to display in response"
        required: false
        type: "string"
      - name: "contains.abc"
        in: "query"
        description: "For filtering: abc  \n- the alphabet"
        required: false
        type: "string"
      - name: "contains.numberOfLetters"
        in: "query"
        description: "For filtering: "
        required: false
        type: "integer"
      - name: "aggreement.name"
        in: "query"
        description: "For filtering: Name of the agreement"
        required: false
        type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Dummy"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Dummy"
    post:
      tags:
      - "dummy"
      summary: "Creates a 'Dummy'"
      operationId: "createDummy"
      parameters:
      - in: "body"
        name: "dummy"
        description: "The Dummy to be created"
        required: true
        schema:
          $ref: "#/definitions/Dummy_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Dummy"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Dummy"
  /dummy/{id}:
    get:
      tags:
      - "dummy"
      summary: "Retrieves a 'Dummy' by Id"
      operationId: "retrieveDummy"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Dummy"
        required: true
        type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Dummy"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Dummy"
    put:
      tags:
      - "dummy"
      summary: "Updates a 'Dummy' by Id"
      operationId: "updateDummy"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Dummy"
        required: true
        type: "string"
      - in: "body"
        name: "dummy"
        description: "The Dummy to be updated"
        required: true
        schema:
          $ref: "#/definitions/Dummy_Update"
      responses:
        201:
          description: "Updated"
          schema:
            $ref: "#/definitions/Dummy"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Dummy"
    delete:
      tags:
      - "dummy"
      summary: "Deletes a 'Dummy' by Id"
      operationId: "deleteDummy"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Dummy"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Dummy"
    patch:
      tags:
      - "dummy"
      summary: "Updates partially a 'Dummy' by Id"
      operationId: "patchDummy"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Dummy"
        required: true
        type: "string"
      - in: "body"
        name: "dummy"
        description: "The Dummy to be updated"
        required: true
        schema:
          $ref: "#/definitions/Dummy_Update"
      responses:
        201:
          description: "Updated"
          schema:
            $ref: "#/definitions/Dummy"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Dummy"
  /hub:
    post:
      tags:
      - "events subscription"
      summary: "Register a listener"
      description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
      operationId: "registerListener"
      parameters:
      - in: "body"
        name: "data"
        description: "Data containing the callback endpoint to deliver the information"
        required: true
        schema:
          $ref: "#/definitions/EventSubscriptionInput"
      responses:
        201:
          description: "Subscribed"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /hub/{id}:
    delete:
      tags:
      - "events subscription"
      summary: "Unregister a listener"
      description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
      operationId: "unregisterListener"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the registered listener"
        required: true
        type: "string"
      responses:
        201:
          description: "Unsubscribed"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
definitions:
  Dummy:
    type: "object"
    properties:
      id:
        type: "string"
      href:
        type: "string"
      contains:
        type: "array"
        items:
          $ref: "#/definitions/AnotherClass"
      aggreement:
        type: "array"
        items:
          $ref: "#/definitions/AgreementRef"
    description: "the person testing the programm"
  Dummy_Create:
    type: "object"
    properties:
      contains:
        type: "array"
        items:
          $ref: "#/definitions/AnotherClass"
      aggreement:
        type: "array"
        items:
          $ref: "#/definitions/AgreementRef"
    description: "the person testing the programm\nSkipped properties: id,href"
  Dummy_Update:
    type: "object"
    properties:
      contains:
        type: "array"
        items:
          $ref: "#/definitions/AnotherClass"
      aggreement:
        type: "array"
        items:
          $ref: "#/definitions/AgreementRef"
    description: "the person testing the programm\nSkipped properties: id,href,id"
  AnotherClass:
    type: "object"
    properties:
      abc:
        type: "string"
        description: "abc  \n- the alphabet"
      numberOfLetters:
        type: "integer"
    description: "desciption descripotion"
  AgreementRef:
    type: "object"
    properties:
      href:
        type: "string"
        description: "Reference of the agreement"
      id:
        type: "string"
        description: "Identifier of the agreement"
      name:
        type: "string"
        description: "Name of the agreement"
    description: "Agreement reference. An agreement represents a contract or arrangement,\
      \ either written or verbal and sometimes enforceable by law, such as a service\
      \ level agreement or a customer price agreement. An agreement involves a number\
      \ of other business entities, such as products, services, and resources and/or\
      \ their specifications."
  EventSubscription:
    required:
    - "callback"
    - "id"
    properties:
      id:
        type: "string"
        description: "Id of the listener"
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
  EventSubscriptionInput:
    required:
    - "callback"
    properties:
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
  Error:
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        description: "An integer coding the error type. This is given to caller so\
          \ he can translate them if required."
      message:
        type: "string"
        description: "A short localized string that describes the error."
      description:
        type: "string"
        description: "(optional) A long localized error description if needed. It\
          \ can contain precise information about which parameter is missing, or what\
          \ are the identifier acceptable values."
      infoURL:
        type: "string"
        description: "(optional) A URL to online documentation that provides more\
          \ information about the error."
