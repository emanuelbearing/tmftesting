---
swagger: "2.0"
info:
  description: "a"
  version: "2.0.0"
  title: "Customer Management"
host: "localhost:8080"
basePath: "/docs"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /customer:
    get:
      tags:
      - "customer"
      summary: "customerFind"
      description: ""
      operationId: "customerFind"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
      responses:
        200:
          description: "List of Customer"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Customer"
      x-swagger-router-controller: "Customer"
    post:
      tags:
      - "customer"
      summary: "customerCreate"
      description: ""
      operationId: "customerCreate"
      parameters:
      - in: "body"
        name: "customer"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        201:
          description: "Customer"
          schema:
            $ref: "#/definitions/Customer"
      x-swagger-router-controller: "Customer"
  /customer/{customerId}:
    get:
      tags:
      - "customer"
      summary: "customerGet"
      description: ""
      operationId: "customerGet"
      parameters:
      - name: "customerId"
        in: "path"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
      responses:
        200:
          description: "Customer"
          schema:
            $ref: "#/definitions/Customer"
      x-swagger-router-controller: "Customer"
    put:
      tags:
      - "customer"
      summary: "customerUpdate"
      description: ""
      operationId: "customerUpdate"
      parameters:
      - name: "customerId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "customer"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        201:
          description: "Success Customer"
          schema:
            $ref: "#/definitions/Customer"
      x-swagger-router-controller: "Customer"
    delete:
      tags:
      - "customer"
      summary: "customerDelete"
      description: ""
      operationId: "customerDelete"
      parameters:
      - name: "customerId"
        in: "path"
        required: true
        type: "string"
      responses:
        204:
          description: "Success"
      x-swagger-router-controller: "Customer"
    patch:
      tags:
      - "customer"
      summary: "customerPatch"
      description: ""
      operationId: "customerPatch"
      parameters:
      - name: "customerId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "customer"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        200:
          description: "Success Customer"
          schema:
            $ref: "#/definitions/Customer"
      x-swagger-router-controller: "Customer"
  /customerAccount:
    get:
      tags:
      - "customerAccount"
      summary: "customerAccountFind"
      description: ""
      operationId: "customerAccountFind"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
      responses:
        200:
          description: "List of CustomerAccount"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerAccount"
      x-swagger-router-controller: "CustomerAccount"
    post:
      tags:
      - "customerAccount"
      summary: "customerAccountCreate"
      description: ""
      operationId: "customerAccountCreate"
      parameters:
      - in: "body"
        name: "customerAccount"
        required: true
        schema:
          $ref: "#/definitions/CustomerAccount"
      responses:
        201:
          description: "CustomerAccount"
          schema:
            $ref: "#/definitions/CustomerAccount"
      x-swagger-router-controller: "CustomerAccount"
  /customerAccount/{customerAccountId}:
    get:
      tags:
      - "customerAccount"
      summary: "customerAccountGet"
      description: ""
      operationId: "customerAccountGet"
      parameters:
      - name: "customerAccountId"
        in: "path"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
      responses:
        200:
          description: "CustomerAccount"
          schema:
            $ref: "#/definitions/CustomerAccount"
      x-swagger-router-controller: "CustomerAccount"
    put:
      tags:
      - "customerAccount"
      summary: "customerAccountUpdate"
      description: ""
      operationId: "customerAccountUpdate"
      parameters:
      - name: "customerAccountId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "customerAccount"
        required: true
        schema:
          $ref: "#/definitions/CustomerAccount"
      responses:
        201:
          description: "Success CustomerAccount"
          schema:
            $ref: "#/definitions/CustomerAccount"
      x-swagger-router-controller: "CustomerAccount"
    delete:
      tags:
      - "customerAccount"
      summary: "customerAccountDelete"
      description: ""
      operationId: "customerAccountDelete"
      parameters:
      - name: "customerAccountId"
        in: "path"
        required: true
        type: "string"
      responses:
        204:
          description: "Success"
      x-swagger-router-controller: "CustomerAccount"
    patch:
      tags:
      - "customerAccount"
      summary: "customerAccountPatch"
      description: ""
      operationId: "customerAccountPatch"
      parameters:
      - name: "customerAccountId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "customerAccount"
        required: true
        schema:
          $ref: "#/definitions/CustomerAccount"
      responses:
        200:
          description: "Success CustomerAccount"
          schema:
            $ref: "#/definitions/CustomerAccount"
      x-swagger-router-controller: "CustomerAccount"
  /paymentMean:
    get:
      tags:
      - "paymentMean"
      summary: "paymentMeanFind"
      description: ""
      operationId: "paymentMeanFind"
      parameters:
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
      responses:
        200:
          description: "List of PaymentMean"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PaymentMean"
      x-swagger-router-controller: "PaymentMean"
    post:
      tags:
      - "paymentMean"
      summary: "paymentMeanCreate"
      description: ""
      operationId: "paymentMeanCreate"
      parameters:
      - in: "body"
        name: "paymentMean"
        required: true
        schema:
          $ref: "#/definitions/PaymentMean"
      responses:
        201:
          description: "PaymentMean"
          schema:
            $ref: "#/definitions/PaymentMean"
      x-swagger-router-controller: "PaymentMean"
  /paymentMean/{paymentMeanId}:
    get:
      tags:
      - "paymentMean"
      summary: "paymentMeanGet"
      description: ""
      operationId: "paymentMeanGet"
      parameters:
      - name: "paymentMeanId"
        in: "path"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: ""
        required: false
        type: "string"
      responses:
        200:
          description: "PaymentMean"
          schema:
            $ref: "#/definitions/PaymentMean"
      x-swagger-router-controller: "PaymentMean"
    put:
      tags:
      - "paymentMean"
      summary: "paymentMeanUpdate"
      description: ""
      operationId: "paymentMeanUpdate"
      parameters:
      - name: "paymentMeanId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "paymentMean"
        required: true
        schema:
          $ref: "#/definitions/PaymentMean"
      responses:
        201:
          description: "Success PaymentMean"
          schema:
            $ref: "#/definitions/PaymentMean"
      x-swagger-router-controller: "PaymentMean"
    delete:
      tags:
      - "paymentMean"
      summary: "paymentMeanDelete"
      description: ""
      operationId: "paymentMeanDelete"
      parameters:
      - name: "paymentMeanId"
        in: "path"
        required: true
        type: "string"
      responses:
        204:
          description: "Success"
      x-swagger-router-controller: "PaymentMean"
    patch:
      tags:
      - "paymentMean"
      summary: "paymentMeanPatch"
      description: ""
      operationId: "paymentMeanPatch"
      parameters:
      - name: "paymentMeanId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "paymentMean"
        required: true
        schema:
          $ref: "#/definitions/PaymentMean"
      responses:
        200:
          description: "Success PaymentMean"
          schema:
            $ref: "#/definitions/PaymentMean"
      x-swagger-router-controller: "PaymentMean"
  /hub:
    get:
      tags:
      - "hub"
      summary: "hubFind"
      description: ""
      operationId: "hubFind"
      parameters: []
      responses:
        200:
          description: "List of Hub"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hub"
      x-swagger-router-controller: "Hub"
    post:
      tags:
      - "hub"
      summary: "hubCreate"
      description: ""
      operationId: "hubCreate"
      parameters:
      - in: "body"
        name: "hub"
        required: true
        schema:
          $ref: "#/definitions/Hub"
      responses:
        201:
          description: "Hub"
          schema:
            $ref: "#/definitions/Hub"
      x-swagger-router-controller: "Hub"
  /hub/{hubId}:
    get:
      tags:
      - "hub"
      summary: "hubGet"
      description: ""
      operationId: "hubGet"
      parameters:
      - name: "hubId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "Hub"
          schema:
            $ref: "#/definitions/Hub"
      x-swagger-router-controller: "Hub"
    delete:
      tags:
      - "hub"
      summary: "hubDelete"
      description: ""
      operationId: "hubDelete"
      parameters:
      - name: "hubId"
        in: "path"
        required: true
        type: "string"
      responses:
        204:
          description: "Success"
      x-swagger-router-controller: "Hub"
definitions:
  Customer:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      href:
        type: "string"
      name:
        type: "string"
      status:
        type: "string"
      description:
        type: "string"
      validFor:
        $ref: "#/definitions/ValidFor"
      customerRank:
        type: "string"
      relatedParty:
        $ref: "#/definitions/Reference"
      characteristic:
        type: "array"
        items:
          $ref: "#/definitions/Characteristic"
      contactMedium:
        type: "array"
        items:
          $ref: "#/definitions/ContactMedium"
      customerAccount:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAccount"
      customerCreditProfile:
        type: "array"
        items:
          $ref: "#/definitions/CustomerCreditProfile"
      paymentMean:
        type: "array"
        items:
          $ref: "#/definitions/PaymentMean"
  CustomerAccount:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      href:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      status:
        type: "string"
      accountType:
        type: "string"
      creditLimit:
        type: "string"
      pin:
        type: "string"
      receivableBalance:
        type: "number"
        format: "float"
      customerAccountTaxExemption:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAccountTaxExemption"
      customerAccountRelationship:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAccountRelationship"
      contact:
        type: "array"
        items:
          $ref: "#/definitions/Contact"
      customer:
        $ref: "#/definitions/CustomerRef"
      customerAccountBalance:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAccountBalance"
      paymentPlan:
        type: "array"
        items:
          $ref: "#/definitions/PaymentPlan"
      lastModified:
        type: "string"
        format: "date-time"
  CustomerCreditProfile:
    type: "object"
    properties:
      creditProfileDate:
        type: "string"
        format: "date-time"
      validFor:
        $ref: "#/definitions/ValidFor"
      creditRiskRating:
        type: "string"
      creditScore:
        type: "string"
  ContactMedium:
    type: "object"
    properties:
      type:
        type: "string"
      validFor:
        $ref: "#/definitions/ValidFor"
      medium:
        $ref: "#/definitions/Medium"
      preferred:
        type: "string"
  Medium:
    type: "object"
    properties:
      city:
        type: "string"
      country:
        type: "string"
      emailAddress:
        type: "string"
      type:
        type: "string"
      number:
        type: "string"
      postcode:
        type: "string"
      stateOrProvince:
        type: "string"
      streetOne:
        type: "string"
      streetTwo:
        type: "string"
  PaymentMean:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      href:
        type: "string"
      name:
        type: "string"
      validFor:
        $ref: "#/definitions/ValidFor"
      type:
        type: "string"
      bankAccount:
        $ref: "#/definitions/BankAccount"
      relatedParty:
        $ref: "#/definitions/Reference"
      creditCard:
        $ref: "#/definitions/CreditCard"
  Characteristic:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "string"
  Reference:
    type: "object"
    properties:
      id:
        type: "string"
      href:
        type: "string"
      role:
        type: "string"
      name:
        type: "string"
  ValidFor:
    type: "object"
    properties:
      startDateTime:
        type: "string"
        format: "date-time"
      endDateTime:
        type: "string"
        format: "date-time"
  CustomerAccountBalance:
    type: "object"
    properties:
      type:
        type: "string"
      amount:
        type: "number"
        format: "float"
      validFor:
        $ref: "#/definitions/ValidFor"
      status:
        type: "string"
  PaymentPlan:
    type: "object"
    properties:
      status:
        type: "string"
      type:
        type: "string"
      priority:
        type: "string"
      amount:
        type: "number"
        format: "float"
      paymentFrequency:
        type: "string"
      numberOfPayments:
        type: "string"
      validFor:
        $ref: "#/definitions/ValidFor"
      paymentMean:
        $ref: "#/definitions/PaymentMeanRef"
  Contact:
    type: "object"
    properties:
      contactType:
        type: "string"
      validFor:
        $ref: "#/definitions/ValidFor"
      contactName:
        type: "string"
      partyRoleType:
        type: "string"
      contactMedium:
        type: "array"
        items:
          $ref: "#/definitions/ContactMedium"
      relatedParty:
        $ref: "#/definitions/Reference"
  CustomerAccountRelationship:
    type: "object"
    properties:
      relationshipType:
        type: "string"
      validFor:
        $ref: "#/definitions/ValidFor"
      customerAccount:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAccountRef"
  CustomerAccountTaxExemption:
    type: "object"
    properties:
      issuingJurisdiction:
        type: "string"
      certificateNumber:
        type: "string"
      reason:
        type: "string"
      validFor:
        $ref: "#/definitions/ValidFor"
  CreditCard:
    type: "object"
    properties:
      creditCardHolder:
        type: "string"
      type:
        type: "string"
      number:
        type: "string"
      expirationDate:
        type: "string"
        format: "date-time"
  BankAccount:
    type: "object"
    properties:
      bIC:
        type: "string"
      domiciliation:
        type: "string"
      iBAN:
        type: "string"
      accountHolder:
        type: "string"
  PaymentMeanRef:
    type: "object"
    properties:
      id:
        type: "string"
      href:
        type: "string"
      name:
        type: "string"
  CustomerAccountRef:
    type: "object"
    properties:
      id:
        type: "string"
      href:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      status:
        type: "string"
  CustomerRef:
    type: "object"
    properties:
      id:
        type: "string"
      href:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
  Hub:
    type: "object"
    properties:
      id:
        type: "string"
      callback:
        type: "string"
      query:
        type: "string"
